{"pageProps":{"post":{"title":"信号処理入門４","date":"2021-08-14T15:35:07","slug":"信号処理入門4","content":"<h2>高速フーリエ変換(Fast Fourier Transform; FFT)</h2>\n<p>離散フーリエ変換を高速に計算するアルゴリズム。</p>\n<p>これを応用し、多項式の乗算が高速になる。</p>\n<p>応用例：</p>\n<ul>\n<li>OFDM</li>\n</ul>\n<h3>離散フーリエ変換の概要</h3>\n<p>離散フーリエ変換は複素関数\n$f(x)$\nを複素関数\n$F(t)$\nに写す写像であって、次の式で定義される。\n$$\nF(t)= \\sum_{x=0}^{N-1} f(x) \\exp\\left(-i\\frac{2 \\pi t x}{N} \\right)\n$$</p>\n<p>逆変換にあたる離散フーリエ逆変換（Inverse Discrete Fourier Transform; IDFT）は次の式で定義される。\n$$\nf(x) = \\frac{1}{N} \\sum_{t=0}^{N-1} F(t) \\exp\\left(i\\frac{2\\pi x t}{N} \\right)\n$$</p>\n<p>複素関数$f(x)$の離散フーリエ変換である複素関数$F(t)$は以下の式で定義される。\n$$\nF(t)= \\sum_{x=0}^{N-1} f(x) \\exp\\left(-i\\frac{2 \\pi t x}{N} \\right)\n$$</p>\n<p>これを愚直に計算すると $O(N^2)$ の計算量になる。</p>\n<p>高速フーリエ変換は、この結果を次数$N$が$2$の累乗のときに $O(N \\log N)$ の計算量で得るアルゴリズムである。</p>\n<p>より一般的には、次数が $N=\\prod n_i$ と素因数分解できるとき、$O(N\\sum n_i)$ の計算量となる。</p>\n<p>次数が $2$ の累乗の場合に最も高速に計算できる。</p>\n<p>高速フーリエ変換を利用し、畳み込み積分などの計算を高速に求めることができる。\nこれも計算量を $O(N^2)$ から $O(N \\log N)$ まで落とすことが可能となる。</p>\n<p>逆変換については正変換とほぼ同じであるが、指数の符号が逆となり、係数$1/N$がかかる。</p>\n<p>すなわち、</p>\n<p>$$\nF(t) = \\sum_{x=0}^{N-1} f(x) \\exp\\left(-i\\frac{2 \\pi t x}{N}\\right)\n$$</p>\n<p>と定義したとき、\n逆変換は\n$$\nf(x) = \\frac{1}{N} \\sum<em>{t=0}^{N-1} F(t) \\exp\\left(i\\frac{2\\pi{tx}}{N}\\right)\n= \\frac{1}{N} \\overline{ \\sum</em>{t=0}^{N-1} \\overline{F(t)} \\exp\\left(-i\\frac{2 \\pi t x}{N} \\right)}\n$$</p>\n<p>このため、$F(t)$ の離散フーリエ逆変換を求めるには、</p>\n<ol>\n<li>複素共役を取り、$\\overline{F(t)}$ を求める</li>\n<li>$\\overline{F(t)}$ の正変換の離散フーリエ変換を高速フーリエ変換で行う</li>\n<li>その結果の複素共役を取り、$N$ で割る</li>\n</ol>\n<p>とすることで求められる。</p>\n<h3>FFT</h3>\n<p>$\\bf{W} = e^{-\\frac{2\\pi}{N}i}$として、</p>\n<p>$$\nX<em>k = \\sum</em>{n=0}^{N-1} x_n \\bf{W}^{nk}\n$$</p>\n<p>まず、偶数列とき数列に分割してみる。</p>\n<p>$N = 2^3 = 8$ として進める。\n$$\n\\begin{aligned}\nX<em>k &#x26;= \\sum</em>{r=0}^3 x<em>{2r}\\bf{W}^{2rk} + \\sum</em>{r=0}^3 x<em>{2r+1}\\bf{W}^{(2r+1)k} \\\n&#x26;= \\sum</em>{r=0}^3 x<em>{2r}\\bf{W}^{2rk} + \\bf{W}^k \\sum</em>{r=0}^3 x_{2r+1}\\bf{W}^{2rk}\n\\end{aligned}\n$$</p>\n<p>ここで、\n$$\n\\bf{W}^k = - \\bf{W}^{k-4}\n$$</p>\n<p>を利用して、</p>\n<p>8点DFTを2つの4点DFTに分解することができる。</p>\n<p>同様に、4点DFTを2つの2点DFTに分解することができる。</p>\n<h2>多項式乗算への応用</h2>\n<p>長さが$N,M$の多項式$f(x),g(x)$において、\n$f(x)g(x)$を計算したい。</p>\n<ul>\n<li>愚直に計算すると$O(MN)$</li>\n</ul>\n<p>$f(x)$ を $N-1$次の多項式、$\\zeta<em>N$ を1の$N$乗根とすると、\n$$\n\\begin{aligned}\n\\hat{f}(t) &#x26;= \\sum</em>{k=0}^{N-1}f(\\zeta_N^k)t^i \\\n&#x26;= f(\\zeta_N^0)t^0 + f(\\zeta_N^1)t^1 + \\cdots + f(\\zeta_N^{N-2})t^{N-2} + f(\\zeta_N^{N-1}t^{N-1}\n\\end{aligned}\n$$\nと表される。</p>\n<ul>\n<li>Inverse DFT</li>\n</ul>\n<p>$\\zeta_N$ を $\\zeta_N^{-1}$ として $N$ で割ると得られる。</p>\n<p>$$\nf(x) = \\frac{1}{N}\\sum_{i=0}^{N-1}\\hat{f}(\\zeta_N^{-i})x^i\n$$</p>\n<p>より、\n$f(x)g(x)$の多項式乗算においては</p>\n<p>DFTをにより $\\hat{f}(t), \\hat{g}(t)$ を求め、これらを掛け合わせることで\n$\\hat{f\\cdot g}(t)$ を求める。</p>\n<p>これに対して IDFT で\n$f(x)g(x)$を復元することにより、求める値が得られる。</p>\n<h3>参考</h3>\n<ul>\n<li><a href=\"https://ja.wikipedia.org/wiki/%E9%AB%98%E9%80%9F%E3%83%95%E3%83%BC%E3%83%AA%E3%82%A8%E5%A4%89%E6%8F%9B\">高速フーリエ変換(Wikipedia)</a></li>\n</ul>\n","tags":["信号処理","基礎","フーリエ変換","離散フーリエ変換"]}},"__N_SSG":true}